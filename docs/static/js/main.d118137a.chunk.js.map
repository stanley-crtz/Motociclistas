{"version":3,"sources":["Global/Global.js","Helpers/updateData.js","Components/Header.js","Helpers/getData.js","Components/Card.js","Components/Sources.js","Hooks/useFetchData.js","Motociclistas.js","index.js"],"names":["Global","updateData","id","rute","a","url","fetch","headers","method","body","JSON","stringify","resp","json","data","Header","className","type","value","onClick","getData","result","map","time","contador","Card","cont","useState","class","check","me","setContador","useEffect","then","success","alert","alt","src","Sources","loading","state","setState","useFetchData","val","i","Motociclistas","ReactDOM","render","document","getElementById"],"mappings":"oMAAaA,EACA,uCCCAC,EAAU,uCAAG,WAAOC,EAAIC,GAAX,mBAAAC,EAAA,6DAEhBC,EAFgB,UAEPL,EAAiBG,GAFV,SAGHG,MAAMD,EAAK,CAC1BE,QAAS,CACL,eAAgB,oBAEpBC,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACjBT,SATc,cAGhBU,EAHgB,gBAYHA,EAAKC,OAZF,cAYhBC,EAZgB,yBAcfA,GAde,2CAAH,wDCCVC,EAAS,WASlB,OACI,iCACI,sBAAKC,UAAU,SAAf,UACI,gDACA,uBAAOC,KAAK,SAASC,MAAM,QAAQC,QAX3B,qB,OCHXC,EAAO,uCAAG,oCAAAhB,EAAA,6DAEbC,EAFa,UAEJL,EAFI,uBAGAM,MAAMD,GAHN,cAGbO,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFO,EAASP,EAAKQ,KAAI,YACpB,MAAO,CACHpB,GAF4C,EAAzBA,GAGnBqB,KAH4C,EAArBA,KAIvBC,SAJ4C,EAAfA,aANlB,kBAcZH,GAdY,4CAAH,qD,OCEPI,EAAO,SAAC,GAAkC,IAAhCvB,EAA+B,EAA/BA,GAAIqB,EAA2B,EAA3BA,KAAgBG,EAAW,EAArBF,SAAqB,EAElBG,mBAAS,CACrCH,SAAU,EACVI,MAAO,sCACPC,OAAO,EACPC,IAAI,IAN0C,mBAE3CN,EAF2C,KAEjCO,EAFiC,KASlDC,qBAAU,WACND,EAAY,2BAAKP,GAAN,IAAgB,SAAYE,OACxC,IAyBH,OACI,sBAAKV,UAAW,0BAA4BQ,EAASI,OAA+B,IAAtBJ,EAASA,UAAiC,GAAfA,EAASM,GAAc,OAAS,IAAKX,QAxB9G,WACU,IAAtBK,EAASA,UAAmBA,EAASM,GAGrC7B,EAAWC,EAAIsB,EAASK,MAAQ,iBAAmB,aAC9CI,MAAK,SAAAZ,GACEA,EAAOa,QACPH,EAAY,CACR,MAASP,EAASK,MAAQ,GAAK,wBAC/B,SAAYL,EAASK,MAAQL,EAASA,SAAW,EAAIA,EAASA,SAAW,EACzE,OAAUA,EAASK,MACnB,IAAM,KAIVM,MAAM,oBACNJ,EAAY,2BAAIP,GAAL,IAAe,SAAY,SAdlDW,MAAM,qBAsBV,UACI,qBAAKC,IAAI,OAAOC,IAAI,kFACpB,sBAAKrB,UAAU,UAAf,UACI,wCAAWO,KACX,2CAAcC,EAASA,YACvB,8CAAiB,EAAIA,EAASA,mBC1CjCc,EAAU,WAAO,IAAD,ECDD,WAAO,IAAD,EAEJX,mBAAS,CAC/Bb,KAAM,GACNyB,SAAS,IAJiB,mBAEvBC,EAFuB,KAEhBC,EAFgB,KAkB9B,OAXAT,qBAAU,WAENZ,IACKa,MAAM,SAAAnB,GAAI,OAAI2B,EAAS,CACpB3B,OACAyB,SAAS,SAGnB,IAGKC,EDfiBE,GAAjB5B,EAFkB,EAElBA,KAAMyB,EAFY,EAEZA,QAEb,OACI,sBAAKvB,UAAU,UAAf,UACMuB,GAAW,mBAAGvB,UAAU,mCAAb,qBAGTF,EAAKQ,KAAI,SAACqB,EAAKC,GAAN,OAAY,cAAC,EAAD,CAAM1C,GAAIyC,EAAIzC,GAAIqB,KAAMoB,EAAIpB,KAAMC,SAAUmB,EAAInB,UAAeoB,UETvFC,EAAgB,WACzB,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCCZC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d118137a.chunk.js","sourcesContent":["export const Global = {\n    backend: \"https://motociclistas.herokuapp.com/\"\n} ","import { Global } from '../Global/Global'\n\nexport const updateData = async (id, rute) => {\n\n    const url = `${Global.backend + rute}`;\n    const resp = await fetch(url, {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: \"PUT\",\n        body: JSON.stringify({\n            id\n        })\n    });\n    const data = await resp.json();\n    \n    return data\n\n}","import React from 'react';\nimport { updateData } from '../Helpers/updateData';\n\nexport const Header = () => {\n\n    const handleClick = () => {\n        // updateData(0, \"updateReset\")\n        //     .then(resp => {\n                \n        //     })\n    }\n\n    return (\n        <header>\n            <div className=\"header\">\n                <h1>Stanley Cortez</h1>\n                <input type=\"button\" value=\"Reset\" onClick={handleClick}/>\n            </div>\n        </header>\n    )\n}","import { Global } from \"../Global/Global\";\n\nexport const getData = async () => {\n\n    const url = `${Global.backend}getSources`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const result = data.map(({ id, time, contador }) => {\n        return {\n            id,\n            time,\n            contador\n        }\n    })\n\n    return result\n\n}","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { updateData } from '../Helpers/updateData';\n\nexport const Card = ({ id, time, contador: cont }) => {\n\n    const [contador, setContador] = useState({\n        contador: 0,\n        class: \"animate__bounceIn animate__delay-1s\",\n        check: false,\n        me: false\n    })\n\n    useEffect(() => {\n        setContador({ ...contador, \"contador\": cont })\n    }, [])\n\n    const handleClick = () => {\n        if (contador.contador === 8 && !contador.me) {\n            alert('Capacidad maxima')\n        } else {\n            updateData(id, contador.check ? \"updateSubtract\" : \"updateAdd\")\n                .then(result => {\n                    if (result.success) {\n                        setContador({\n                            \"class\": contador.check ? \"\" : \"animate__pulse greend\",\n                            \"contador\": contador.check ? contador.contador - 1 : contador.contador + 1,\n                            \"check\": !contador.check,\n                            \"me\": true\n                        });\n                    }\n                    else {\n                        alert('Capacidad maxima')\n                        setContador({...contador, \"contador\": 8})\n                    }\n                })\n        }\n\n    }\n\n    return (\n        <div className={\"card animate__animated \" + contador.class + (contador.contador === 8 && contador.me == false ? \" red\" : \"\")} onClick={handleClick}>\n            <img alt=\"Icon\" src=\"https://res.cloudinary.com/dxmkfwigq/image/upload/v1611326508/Time_h0j5ab.svg\" />\n            <div className=\"context\">\n                <h2>Time: {time}</h2>\n                <p>Ocupados: {contador.contador}</p>\n                <p>Disponibles: {8 - contador.contador}</p>\n            </div>\n        </div>\n    )\n}\n\nCard.propTypes = {\n    time: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    contador: PropTypes.number.isRequired\n}","import React from 'react';\nimport { useFetchData } from '../Hooks/useFetchData';\nimport {Card} from './Card';\n\nexport const Sources = () => {\n\n    const {data, loading} = useFetchData();\n\n    return (\n        <div className=\"sources\">\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            {\n                data.map((val, i) => <Card id={val.id} time={val.time} contador={val.contador} key={i}/>)\n            }\n\n        </div>\n    )\n}\n\n","import { useEffect, useState } from \"react\";\nimport { getData } from '../Helpers/getData';\n\nexport const useFetchData = () => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getData()\n            .then( data => setState({\n                data,\n                loading: false\n            }))\n\n    },[])\n\n\n    return state;\n\n}","import React from 'react';\nimport { Header } from './Components/Header';\nimport { Sources } from './Components/Sources';\n\nexport const Motociclistas = () => {\n    return (\n        <>\n            <Header />\n            <Sources />\n        </>\n    )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport {Motociclistas} from './Motociclistas';\n\n// Styles\nimport './Assets/CSS/index.css'\n\nReactDOM.render(\n  <Motociclistas />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}